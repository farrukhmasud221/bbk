export const mediationOperationLS_CreateSipTrunkState = {
    states: [{
        name: "top.gui.mediation_operation_LS_CreateSipTrunk",
        abstract: true,
        params: {
          },
        resolve: {
            
    },
},
    {
        name: "top.gui.mediation_operation_LS_CreateSipTrunk.gui",
        url: "CreateSipTrunk",
        views: {
            "tabContent@top": { 
                template:'<!DOCTYPE html><html><head>  <meta name="viewport" content="width=device-width, initial-scale=1">  <style>    body {      font-family: Arial, Helvetica, sans-serif;    }    * {      box-sizing: border-box;    }    .form-inline {      display: flex;      flex-flow: row wrap;      align-items: center;    }    .form-inline label {      margin: 5px 10px 5px 0;    }    .form-inline input {      vertical-align: middle;      margin: 5px 10px 5px 0;      padding: 10px;      background-color: #fff;      border: 1px solid #ddd;    }    .form-inline button {      padding: 10px 20px;      background-color: dodgerblue;      border: 1px solid #ddd;      color: white;      cursor: pointer;    }    .form-inline button:hover {      background-color: royalblue;    }    @media (max-width: 800px) {      .form-inline input {        margin: 10px 0;      }      .form-inline {        flex-direction: column;        align-items: stretch;      }    }    * {      box-sizing: border-box;    }    input[type=text],    select,    textarea {      width: 100%;      padding: 12px;      border: 1px solid #ccc;      border-radius: 4px;      resize: vertical;    }    label {      padding: 12px 12px 12px 0;      display: inline-block;    }    input[type=submit] {      background-color: #4CAF50;      color: white;      padding: 12px 20px;      border: none;      border-radius: 4px;      cursor: pointer;      float: right;    }    input[type=submit]:hover {      background-color: #45a049;    }    .container {      border: 5px;      width: 100%;      background-color: #ffffff;      color:black;       padding: 20px;    }    .col-25 {      float: left;      width: 25%;      margin-top: 6px;    }    .col-75 {      float: left;      width: 75%;      margin-top: 6px;    }    /* Clear floats after the columns */    .row:after {      content: "";      display: table;      clear: both;    }    /* Responsive layout - when the screen is less than 600px wide, make the two columns stack on top of each other instead of next to each other */    @media screen and (max-width: 600px) {      .col-25,      .col-75,      input[type=submit] {        width: 100%;        margin-top: 0;      }    }    .custom-select {  position: relative;  font-family: Arial;}.custom-select select {  display: none; /*hide original SELECT element:*/}.dropbtn {  background-color:  rgb(27, 57, 122);  border-radius: 16px;}/*style the arrow inside the select element:*/.dropbtn:after {  position: absolute;  content: "";  top: 16px;  right: 16px;  width: 0;  height: 0;  border-radius: 16px solid transparent;  border-color: #fff transparent transparent transparent;}/*point the arrow upwards when the select box is open (active):*/.dropbtn.select-arrow-active:after {  border-color: transparent transparent #fff transparent;  top: 16px;  border-radius: 16px;}/*style the items (options), including the selected item:*/.select-items div,.dropbtn {  color: #ffffff;  padding: 16px 16px;  border-radius: 16px solid transparent;  border-color: transparent transparent rgba(0, 0, 0, 0.1) transparent;  cursor: pointer;  user-select: none;}/*style items (options):*/.select-items {  position: absolute;  background-color:  rgb(27, 57, 122);  top: 100%;  border-radius: 16px;  left: 0;  right: 0;  z-index: 99;}/*hide the items when the select box is closed:*/.select-hide {  display: none;  border-radius: 16px;}.select-items div:hover, .same-as-selected {  background-color: rgba(0, 0, 0, 0.1);  border-radius: 16px;}    .dropdown {      border-radius: 16px;      position: relative;      display: inline-block;      color: ghostwhite;    }   </style>   <script src="https://code.jquery.com/jquery-1.12.4.min.js"></script>    <script        type="text/javascript">   $(document).ready(function () { $("#btn").click(function (e) { var jsonData = {}; var formData = $("#myform").serializeArray(); $.each(formData, function () { if (jsonData[this.name]) { if (!jsonData[this.name].push) { jsonData[this.name] = [jsonData[this.name]]; } jsonData[this.name].push(this.value || ""); } else { jsonData[this.name] = this.value || ""; } }); console.log(jsonData); $.ajax({  data: jsonData, }); e.preventDefault(); }); }); </script></head><body>    <div class="dropbtn">  <form  id="myform" type="post" >    <div class="container">      <label for="SIP Trunk Name">SIP Trunk Name :</label> &nbsp;&nbsp;&nbsp; <input required="required" type="text"        value="" name="SIP Trunk Name" /> <label for="SIP Trunk Description">SIP Trunk Description        :</label>&nbsp;&nbsp; <input required="required" type="text" value="" name="SIP Trunk Description" /> <label        for="Tech Prefix">Tech        Prefix:</label>&nbsp;&nbsp;&nbsp; <input required="required" type="text" value="" name="Tech Prefix" />    </div>    <div class="container">      <label for="Is Postpaid"> Is Postpaid :</label> <select name="Is Postpaid">        <option value="Yes">Yes</option>        <option value="No" selected="No">No</option>      </select> <label for="Is Suspended"> Is Suspended :</label> <select name="Is Suspended">        <option value="Yes">Yes</option>        <option value="No" selected="No">No</option>      </select> <label for=" "> </label>&nbsp;&nbsp;&nbsp; <div class="default">      </div>    </div>    <div class="container">    <label>Forwarding IP Policy      <style>        #showMe {          display: none;          width: 100%;        }      </style>      </head> <select class="maindiv" id="Forwarding IP Policy" name="Forwarding IP Policy">        <option value="" selected>Select Policy</option>        <option value="RoundRobin">RoundRobin</option>        <option value="OverFlow">OverFlow</option>        <option value="Random">Random</option>        <option value="Prefix">Prefix</option>        <option value="Priority">Priority</option>        <option value="CrankBack">CrankBack</option>        <option value="Custom">Custom</option>      </select>      <div class="maindiv" id="showMe">        <label for="SIP Trunk Name">First Forwarding IP</label>        <input required="required" type="text" value="" name="First Forwarding IP" />                <label for="SIP Trunk Name">Second Forwarding IP</label>        <input required="required" type="text" value="" name="Second Forwarding IP" />        <label for="SIP Trunk Name">Third Forwarding IP</label>        <input required="required" type="text" value="" name="Third Forwarding IP" />        <label for="SIP Trunk Name">Fourth Forwarding IP</label>        <input required="required" type="text" value=""  name="Fourth Forwarding IP" />        <label for="SIP Trunk Name">Fifth Forwarding IP</label>        <input required="required" type="text" value="" name="Fifth Forwarding IP" />        <label for="SIP Trunk Name">Sixth Forwarding IP</label>        <input required="required" type="text" value="" name="Sixth Forwarding IP" />       </div>      </div>      <script> var elem = document.getElementById("Forwarding IP Policy"); elem.onchange = function () { var hiddenDiv = document.getElementById("showMe"); hiddenDiv.style.display = (this.value == "") ? "none" : "block"; };   </script>    </label>    <div class="container">        <input required="required" type="text" value="" name="Primary IP "  placeholder="Primary IP "/>         <br>        <input required="required" type="text" value="" name="Forwarding Port "  placeholder="Forwarding Port "/>       </div>      <div class="container">          <input required="required" type="text" value="" placeholder="Total Channels" name="Total Channels"/>           <br>          <input required="required" type="text" value="" name="Incoming Channels"  placeholder="Incoming Channels"/>           <input required="required" type="text" value="" name="Outgoing Channels"  placeholder="Outgoing Channels"/>         </div>        <div class="container">      <label for="CODEC Group"> CODEC Group:</label> <select class="maindiv" name="CODEC Group">        <option value="WateenTCCODE">WateenTCCODE</option>        <option value="Default" selected="Default">Default</option>      </select>      <input type="submit" id="btn" name="btn" class="btn" value="Create" />    </div>    <div class="container">            </div>    <script> var currentTab = 0; showTab(currentTab); function showTab(n) { var x = document.getElementsByClassName("tab"); x[n].style.display = "block"; if (n == 0) { document.getElementById("prevBtn").style.display = "none"; } else { document.getElementById("prevBtn").style.display = "inline"; } if (n == (x.length - 1)) { document.getElementById("nextBtn").innerHTML = "Submit"; } else { document.getElementById("nextBtn").innerHTML = "Next"; } fixStepIndicator(n) } function nextPrev(n) { var x = document.getElementsByClassName("tab"); if (n == 1 && !validateForm()) return false; x[currentTab].style.display = "none"; currentTab = currentTab + n; if (currentTab >= x.length) { document.getElementById("regForm").submit(); return false; } showTab(currentTab); } function validateForm() { var x, y, i, valid = true; x = document.getElementsByClassName("tab"); y = x[currentTab].getElementsByTagName("input"); for (i = 0; i < y.length; i++) { if (y[i].value == "") { y[i].className += " invalid"; valid = true; } } if (valid) { document.getElementsByClassName("step")[currentTab].className += " finish"; } return valid; } function fixStepIndicator(n) { for (i = 0; i < x.length; i++) { x[i].className = x[i].className.replace(" active", ""); } x[n].className += " active"; }     </script>      </form></div></body></html>',
                controller:["$scope",function ($scope)
            {
                 $scope.msg="<button type='submit'  value='https://acedial.com/contact/>help</button>";
                    
            }]

            }
        }
    }]

};